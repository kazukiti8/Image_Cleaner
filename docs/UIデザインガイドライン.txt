--- START OF FILE UIデザインガイドライン.txt ---
画像整理アプリ UIデザインガイドライン v2.0 (アイコンアセット情報統合版)

このドキュメントは、画像整理アプリのUIデザインに関する原則、カラースキーム、タイポグラフィ、アイコン選定とアセット情報の方針をまとめたものです。

**目次**
1. 基本思想
2. カラースキーム
3. タイポグラフィ
4. アイコン方針・選定・アセット情報
    4.1. アイコン利用の基本方針
    4.2. ヘッダーエリア アイコン
    4.3. 結果リストエリア（中央ペイン） アイコン
    4.4. 画面下部アクションボタンエリア (フッター) アイコン
    4.5. プレビューエリア（左ペイン） アイコン
    4.6. その他 アイコン
    4.7. アイコンの利用方法（推奨）と主要アイコンSVGパス例
5. レイアウトと余白
6. インタラクションのフィードバック
7. アクセシビリティ

---
**1. 基本思想**
(旧 `デザイン原則案.txt` v1.2 より)

効率性と直感性: ユーザーが目的（不要な画像の特定と整理）を迅速かつ迷いなく達成できることを最優先とする。操作は直感的で、学習コストを低く抑える。
明瞭性と一貫性: 情報は明確に提示し、アプリケーション全体でUI要素の見た目や振る舞いに一貫性を持たせる。ユーザーが次に何をすべきか、現在の状態がどうなっているかを容易に理解できるようにする。
安全性と信頼感: ファイル操作（特に削除）は慎重に行えるようにし、ユーザーに安心感を与える。処理の進捗や結果を適切にフィードバックする。
シンプルさとクリーンさ: 過度な装飾を避け、必要な情報と機能に集中できる、すっきりとしたクリーンなインターフェースを目指す。HTMLモックアップで示されているミニマルなデザインを踏襲する。

---
**2. カラースキーム**
(旧 `デザイン原則案.txt` v1.2 より、セカンダリーカラー（補助）のグリーン系をブルー系でFIX)

HTMLモックアップで使用されているTailwind CSSのカラーパレットをベースとする。
ベースカラー:
背景: ホワイト (#FFFFFF) または非常に明るいグレー (例: bg-slate-50, bg-gray-100, bg-slate-100 モックアップ設定画面背景)。クリーンで落ち着いた印象を与える。
メインコンテンツエリア背景: ホワイト (#FFFFFF)。
アクセントカラー:
プライマリーカラー: ブルー系 (例: blue-500, blue-600 モックアップのタブアクティブ色、一部ボタン)。信頼感、安定感を与え、主要なアクションボタンやアクティブな要素に使用。
セカンダリーカラー（補助）:
ブルー系 (例: blue-400, blue-500): 成功や完了を示すアクション（例: スキャン開始、OKボタンなど）にもプライマリーカラーまたはその派生色を使用し、全体的なトーンを統一します。ただし、明確な区別が必要な場合は他の色も検討の余地を残します。
アンバー/オレンジ系 (例: amber-500 モックアップの「ゴミ箱へ」ボタン): 注意や中間的なアクション。
レッド系 (例: red-600 モックアップの「完全に削除」ボタン): 破壊的なアクションやエラー表示。
スカイブルー系 (例: sky-500 モックアップの「移動」ボタン): 通常のアクション。
ニュートラルカラー（ボタン等）: スレートグレー系 (例: slate-200 slate-500 slate-600 モックアップのフィルターボタン、一部アクションボタン)。
テキストカラー:
基本テキスト: ダークグレー (例: text-slate-800, text-gray-700)。純粋な黒 (#000000) よりも少し柔らかい印象。
補助テキスト/説明テキスト: ミディアムグレー (例: text-slate-600, text-gray-500)。
リンク/インタラクティブテキスト: プライマリーカラー（ブルー系）。
ボーダー/区切り線: ライトグレー (例: border-slate-200, border-gray-300)。要素間の区別を明確にしつつ、主張しすぎないようにする。

---
**3. タイポグラフィ**
(旧 `デザイン原則案.txt` v1.2 より)

フォントファミリー:
基本フォント: Inter (HTMLモックアップで使用)。可読性が高く、モダンなサンセリフ体。OSの標準フォント（Windowsなら Yu Gothic UI や Meiryo UI、macOSなら San Francisco）をフォールバックとして指定。
フォントサイズ (Tailwind CSSのクラスを参考に調整):
基本テキスト: text-sm (14px) または text-xs (12px) を基準に、情報の種類に応じて調整。
見出し (H1, H2, H3など): text-lg (18px), text-xl (20px) など階層に応じて。
ボタン内テキスト: text-xs (12px) または text-sm (14px)。
補助テキスト/ラベル: text-xs (12px)。
全体的に、読みやすさを確保できる十分なサイズを保つ。
フォントウェイト (Interの場合):
通常: font-normal (400)
見出し/強調: font-semibold (600) または font-medium (500)。
行間: leading-normal や leading-relaxed など、Tailwind CSSのユーティリティを適切に用い、可読性を高める。

---
**4. アイコン方針・選定・アセット情報**
(旧 `デザイン原則案.txt` の「4. アイコンスタイル」部、旧 `アイコン選定案.txt`、旧 `アイコンアセット集.txt` の内容を統合・整理)

4.1. アイコン利用の基本方針
使用アイコンセット: Google Fonts Icons (Material Symbols and Icons) の "Outlined" スタイルを基本とします。
取得元: Google Fonts Icons (https://fonts.google.com/icons)
スタイル: すべて「Outlined」で統一します。
埋め込み方法: SVGコードをHTMLに直接埋め込みます。（詳細は 4.7. 参照）
サイズ: 基本は w-5 h-5 (20px) または w-4 h-4 (16px) とし、ボタンやテキストとのバランスで調整します。mr-1 や mr-2 でテキストとの間隔を調整します。
色: fill="currentColor" をSVGタグまたはpathタグに指定し、親要素のテキストカラーを継承させます (例: text-white, text-slate-700)。
一貫性: アプリケーション全体で同じスタイルセットのアイコンを使用する。
ツールチップ: アイコンのみのボタンにする場合は、「アプリケーション詳細設計書.txt」で定義されているように、必ずツールチップで機能名を補足してください。
注意点: 実際に使用する際は、Google Fonts Iconsのサイトから正確なSVGコードをコピーしてください。プレビューの絵文字はあくまでイメージです。

4.2. ヘッダーエリア アイコン
| 機能        | アイコン名 (Google Fonts) | 推奨アイコン (イメージ) | 説明・備考                                                                 |
| :---------- | :------------------------ | :---------------------- | :------------------------------------------------------------------------- |
| **設定ボタン** | `settings`                | ⚙️                      | 最も一般的で直感的な設定アイコン。 (SVGパス例は 4.7. 参照)                  |

4.3. 結果リストエリア（中央ペイン） アイコン
| 機能                     | アイコン名 (Google Fonts) | 推奨アイコン (イメージ) | 説明・備考                                     |
| :----------------------- | :------------------------ | :---------------------- | :--------------------------------------------- |
| **テーブルヘッダー 昇順ソート** | `arrow_upward`            | ↑                       | シンプルで明確な上向き矢印。 (SVGパス例は 4.7. 参照) |
| **テーブルヘッダー 降順ソート** | `arrow_downward`          | ↓                       | シンプルで明確な下向き矢印。                       |
| **類似画像推奨表示 (星)** | `star_outline`            | ☆                       | 線のみの星アイコン。UI/UXタスクリストの定義に合致。 |
| **類似画像推奨表示 (王冠)** | `workspace_premium`       | 👑 (イメージ)           | プレミアム感、推奨感を示す。または `military_tech` (勲章風) も候補。 |

4.4. 画面下部アクションボタンエリア (フッター) アイコン
| 機能                             | アイコン名 (Google Fonts)     | 推奨アイコン (イメージ) | 説明・備考                                                                   |
| :------------------------------- | :---------------------------- | :---------------------- | :--------------------------------------------------------------------------- |
| **選択した画像をゴミ箱へ**       | `delete_outline`              | 🗑️                      | 標準的なゴミ箱アイコン。 (SVGパス例は 4.7. 参照)                               |
| **選択した画像を完全に削除**       | `delete_forever_outline`      | 🗑️💥                    | ゴミ箱に「永久」の意匠が加わり、より強い警告を示す。                                 |
| **選択した画像を移動...**        | `drive_file_move_outline`     | 📁➡️                    | フォルダと矢印で「移動」を明確に示す。                                           |
| **(エラータブ) 選択を無視**      | `visibility_off_outline`      | 👁️‍🗨️🚫                  | 「見えなくする」という意味合いで直感的。                                           |
| **(エラータブ) 再スキャン試行**  | `replay_circle_filled`        | 🔄                      | 円形の矢印で「再試行」の操作を示す。`refresh` も候補だが、こちらはより汎用的な更新。 |

4.5. プレビューエリア（左ペイン） アイコン
| 機能                            | アイコン名 (Google Fonts) | 推奨アイコン (イメージ) | 説明・備考                               |
| :------------------------------ | :------------------------ | :---------------------- | :--------------------------------------- |
| **プレビュー倍率 拡大**         | `add_circle_outline`      | ➕                      | 円の中にプラス記号で、操作ボタンとして分かりやすい。 |
| **プレビュー倍率 縮小**         | `remove_circle_outline`   | ➖                      | 円の中にマイナス記号。                         |
| **プレビュー倍率 100%リセット** | `filter_center_focus`     | 🎯                      | 中央にフォーカスするイメージ。または `zoom_out_map` (全体表示) も候補。 |

4.6. その他 アイコン
| 機能                               | アイコン名 (Google Fonts)   | 推奨アイコン (イメージ) | 説明・備考                                                                 |
| :--------------------------------- | :-------------------------- | :---------------------- | :------------------------------------------------------------------------- |
| **エラーリストのエラー種別 (例: 破損)** | `broken_image_outline`      | 🖼️🚫                    | 画像が壊れている状態を視覚的に示す。                                               |
| **エラーリストのエラー種別 (例: アクセス不可)** | `lock_outline`              | 🔒                      | アクセスが制限されていることを示す。                                                 |
| **ドラッグ＆ドロップ時のオーバーレイ (フォルダ)** | `folder_open_outline`    | 📁                      | シンプルな開いたフォルダアイコン。「アプリケーション詳細設計書.txt」での指定に合わせる。 |
| **初回起動時ガイダンス: 次へ**   | `arrow_forward_ios`       | ▶️                      | iOS風の右向き矢印。                                                        |
| **初回起動時ガイダンス: スキップ** | `skip_next`               | ⏭️                      | 次へスキップする標準的なアイコン。                                               |
| **初回起動時ガイダンス: 開始する** | `rocket_launch`           | 🚀                      | 開始・ローンチをイメージさせるアイコン。                                           |
| **初回起動時ガイダンス: 閉じる/完了**| `check_circle_outline`    | ✅                      | チェックマークと円で完了を示す。                                                 |

4.7. アイコンの利用方法（推奨）と主要アイコンSVGパス例
1.  **Google Fonts Iconsのサイトでアイコンを検索**:
    * [https://fonts.google.com/icons](https://fonts.google.com/icons)
    * 上記の「アイコン名」で検索し、「Outlined」スタイルを選択します。
2.  **SVGコードの取得**:
    * 目的のアイコンを選択し、「SVG」の項目からSVGコードをコピーします。
3.  **HTMLへの埋め込みとスタイリング**:
    * HTMLのボタンなどの要素内にSVGコードを直接貼り付けます。
    * Tailwind CSSでサイズと色を指定します。例:
        ```html
        <button class="flex items-center px-4 py-2 ...">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5 mr-2">
                <path d="... (ここにGoogle Fontsからコピーしたpathデータ) ..." />
            </svg>
            ボタンのテキスト
        </button>
        ```
    * `fill="currentColor"` を指定することで、親要素のテキストカラー (`text-white`, `text-slate-700` など) を継承します。

**主要アイコンSVGパス例 (Google Fonts Icons - Outlined より一部抜粋。使用時はサイトから最新を取得推奨)**

*   **settings (設定ボタン)**
    *   推奨Tailwind CSSクラス例: `w-6 h-6`
    *   SVG `<path>` データ (参考): `d="M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 l-3.84,0c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.03c-0.59,0.24-1.13,0.57-1.62,0.96l-2.39-0.96c-0.22-0.08-0.47,0-0.59,0.22 l-1.92,3.32c-0.11,0.2-0.06,0.47,0.12,0.61l2.03,1.58C4.02,11.36,4,11.68,4,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.22 c0.04,0.24,0.24,0.41,0.48,0.41l3.84,0c0.24,0,0.43-0.17,0.47-0.41l0.36-2.22c0.59-0.24,1.13-0.57,1.62-0.96l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.11-0.2,0.06-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z"`
*   **arrow_upward (昇順ソート)**
    *   推奨Tailwind CSSクラス例: `w-4 h-4 ml-1`
    *   SVG `<path>` データ (参考): `d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"`
*   **delete_outline (ゴミ箱へ)**
    *   推奨Tailwind CSSクラス例: `w-5 h-5 mr-1`
    *   SVG `<path>` データ (参考): `d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"`

*(他のアイコンについては、Google Fonts Iconsサイトを参照して取得してください)*

---
**5. レイアウトと余白**
(旧 `デザイン原則案.txt` v1.2 より)

グリッドシステム（概念的）: 要素の配置に一定のルール（例: 4pxまたは8pxベースのグリッドなど）を設け、視覚的な整合性を保つ。Tailwind CSSのスペーシングユーティリティ (p-2, m-4 など、0.5rem, 1rem に相当）を積極的に活用。
余白（パディング・マージン）:
要素間の余白を十分に確保し、窮屈な印象を与えないようにする。
情報のグループ化を明確にするために、関連する要素間の余白は狭く、異なるグループ間の余白は広く取る。
コンポーネントの角丸: HTMLモックアップで採用されているように、ボタンやカード、入力フィールドなどのUI要素には適度な角丸（例: Tailwind CSS の rounded-md や rounded-lg）を適用し、柔らかい印象を与える。

---
**6. インタラクションのフィードバック**
(旧 `デザイン原則案.txt` v1.2 より)

ホバー状態: マウスオーバー時に背景色をわずかに変更したり（例: hover:bg-slate-100）、テキストに下線を表示したりするなど、インタラクティブな要素であることを示す。Tailwind CSSの hover: プレフィックスを活用。
アクティブ/フォーカス状態: クリック時やキーボードフォーカス時に、枠線を表示したり（例: focus:ring-2 focus:ring-blue-500）、背景色を濃くしたりするなど、明確な視覚的フィードバックを提供する。Tailwind CSSの active:, focus: プレフィックスを活用。
無効状態: 操作できないボタンなどは、色を薄くしたり（例: opacity-50）、カーソルを not-allowed にしたりして、操作不能であることを示す。Tailwind CSSの disabled: プレフィックスを活用。

---
**7. アクセシビリティ (WCAG 2.1 AA準拠を目標)**
(旧 `デザイン原則案.txt` v1.2 より)

コントラスト比: 背景色と前景（テキストやアイコン）のコントラスト比を十分に確保する（例: テキストは4.5:1以上、大きな文字は3:1以上）。ツールを使って確認する。
キーボードナビゲーション: 全てのインタラクティブ要素がキーボード（Tabキー、Enterキー、Spaceキー、矢印キーなど）で操作できるようにする。フォーカスインジケータを明確に表示する（Tailwind CSSの focus:ring など）。
代替テキスト: 画像やアイコンボタンには、スクリーンリーダーが読み上げられる適切な代替テキストを提供する（Electronの場合、HTMLの alt 属性や aria-label 属性など）。
意味論的HTML: 適切なHTMLタグを使用し、UIの構造と意味を正しく伝える。
これらの原則案を元に、具体的なUIコンポーネントのデザインを進めていくことになります。 HTMLモックアップのスタイルを尊重しつつ、より一貫性があり使いやすいUIを目指します。
--- END OF FILE UIデザインガイドライン.txt ---